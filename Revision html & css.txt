HTML Tag:

1. br


CSS Property:

1. content:
2. counter-reset: 
3. counter-increment: 
4.  content: "" counter() "";
5. position:
6. left: 


CSS Value:

1. content: 'Hello ';
2. counter-reset: section;
3. counter-increment: section;
4. content: "Number " counter(section) ": ";
5. position: relative;
6. left: 20px;
7. top: 50px;
8. position: fixed;
9. position: absolute;



Pseudo Class:

1. :hover
2. :focus
3. :first-child
4. :last-child
5. :nth-child(2)
6. :visited


Pseudo Element:

1. ::before
2. ::after



Note:

Pseudo Class লিখতে প্রথমে ট্যাগ বা ক্লাসের নাম লিখে : একটা কোলন দিয়ে Pseudo Class এর নাম লিখতে হয়। এই ক্লাস যে কন্টেন্টে সেট করা হবে সেটাতে মাউস নেয়ার পূর্ব পর্যন্ত স্বাভাবিক স্টাইলই থাকবে কিন্তু যখন তাতে মাউস নেয়া হবে তখন hover এরমধ্যে যেই স্টাইল করা আছে সেটা এপ্লাই হবে।  যেমন, h1:hover{}

কোনো কন্টেন্টে যদি ফোকাস থাকে যেমন, input তখন চাইলে তার ফোকাসে স্টাইল দেয়া যায়। তবে এই স্টাইল ততক্ষণ পর্যন্ত থাকবে যতক্ষণ পর্যন্ত ফোকাস থাকবে। ফোকাস সরিয়ে নিলে মানে অন্য কন্টেন্টে ক্লিক করলে স্টাইল চলে যাবে। যেমন, input:focus{}

একই রকম অনেকগুলো ট্যাগের মধ্যে স্পেসিফিকভাবে শুরু বা শেষেরটাকে ধরে স্টাইল দিতে  :first/last-child ক্লাস ইউজ হয়। যেমন, li:last-child{}
আর যদি জোড়গুলো স্টাইল দিবে তাহলে  nth-child লিখে () ব্র্যাকেটে even বা  2n লিখবে আর বেজোড় লিখতে odd বা  2n+1 লিখবে। যেমন, li: nth-child(even/2n)
এছাড়া যদি যেকোনোটাকে স্পেসিফিকভাবে স্টাইল দিয়ে হয় তাহলে  () ব্র্যাকেটে সিরিয়াল অনুযায়ী নাম্বারটা বলে দিলেই হবে। li:nth-child(3)

যদি কোনো লিংক ভিজিট করলে সেটার স্টাইল পরিবর্তন করতে চাই তাহলে :visited নামের ক্লাসটি ব্যবহার করা হয়। যেমন, a:visited

যখন Pseudo Class ইউজ করা হয় তখন : কোলন দেয়া হয় ১টা আর যখন Pseudo Element ইউজ করা হয় তখন  :: কোলন দেয়া হয় ২টা 
after/before Pseudo Element যেকোনো ট্যাগের আগে পরে css এর মাধ্যমে টেক্সট লেখা যায়, এছাড়া এর মাধ্যমে বিভিন্ন স্টাইলও দেয়া হয়। তবে টেক্সট লিখতে হলে তা content নামের একটা প্রোপার্টি নিয়ে '' কোটেশনের মধ্যে লিখতে হয়। তবে নরমাল টেক্সট যেভাবে সিলেক্ট করা যায় Pseudo Element এর মাধ্যমে যে টেক্সট লেখা হয় সেটা তেমনভাবে সিলেক্ট করা যায় না।




পজিশন ৪ ধরনের। 1. static 2.reletive 3. absolute; 4. 
position static মানে হলো স্বাভাবিক স্থানে থাকা। আর  reletive মানে হলো কন্টেন্ট যেখানে থাকার কথা ছিলো তার তুলনায় সে কোথায় আছে মানে সেখান থেকে কোনদিকে সরে গেল।
reletive দেয়া হয় পেরেন্ট কন্টেন্টকে আর absolute দেয়া হয় চাইল্ডকে। absolute দিলে সে তার জায়গা ছেড়ে দেয় কিন্তু reletive তার জায়গা ছেড়ে দেয় না বরং ফাকা করে দেয়।




কোনো ট্যাগকে যদি external css স্টাইল দেয়া হয় আবার একই ট্যাগকে internal css স্টাইলও দেয়া হয় শুধু ভ্যালুতে পার্থক্য থাকে তাহলে  internal স্টাইলটা পাবে কারণ   external এর তুলনায়  internal এর পাওয়ার বেশি আবার internal এর তুলনায়  inline css এর পাওয়ার বেশি। 
এছাড়া স্বাভাবিক tag এর চেয়ে class এর পাওয়ার বেশি। আবার  class এর চেয়ে id এর পাওয়ার বেশি।

external css এ কোনো ট্যাগকে উপরে স্টাইল দেয়ার পর নিচে আবার ভিন্ন স্টাইল দিলে নিচেরটাই পাবে। কারণ উপরের চেয়ে নিচের পাওয়ার বেশি। আবার যদি এমন হয় একই ট্যাগে ২টা ক্লাস ইউজ করা হয়েছে তাহলে সেই ক্লাস নিচে থাকবে সেটার পাওয়ার বেশি থাকবে। তবে যদি এমন হয় উপর ক্লাস ট্যাগের নামসহ স্টাইল করা তাহলে উপরেরটাই কাজ করবে। কারণ ট্যাগের নামসহ ক্লাসকে কল করার মাধ্যমে তার পাওয়ার বেড়ে গেছে।

 তবে উপরের সবগুলোর চেয়েও বেশি পাওয়ারফুল !important ব্যাঙ ইমপর্টেন্ট। স্বাভাবিক কোনো ট্যাগে স্টাইল দেয়ার পর ; সেমিকোলনের আগে শুধু !important লিখে দিলে আর যতস্টাইল আছে কোনোটাই কাজ করবে না, শুধু এটাই কাজ করবে। তবে এটা স্টাইলে যত কম লেখা যায় তত ভালো।




